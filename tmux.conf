# #############################################################################
# Appearance
# #############################################################################

# Roughly from https://github.com/srathbone/tmux-arc-theme-config/blob/master/.tmux.conf
# Status
set -g status-right-length 75
set -g status-right '| #(conky -i 1 --text="RAM: \$memperc% | CPU: \$cpu% | \${time %Y-%m-%d} | \${time %H:%M %Z}") '
set -g status-left "[#S]"
set -g status-fg "#fffffe"
set -g status-bg "#343843"
# Panes
set -g pane-border-bg default
set -g pane-border-fg "#cc575d"
set -g pane-active-border-fg "#5294e2"
set -g pane-active-border-bg default
# Window
setw -g window-status-format "#[fg=#eeeeef bg=#343843]#{?window_activity_flag,#[fg=#111111 bg=#cc575d],} #I #W #{?window_bell_flag,,}#{?window_content_flag,,}#{?window_silence_flag,,}#{?window_last_flag,,}"
setw -g window-status-current-format "#[bg=#5294e2 fg=#ffffff bold] #I #W "
setw -g window-status-bell-style "fg=#111111 bg=#cc575d bold"
setw -g window-status-activity-style "fg=#111111 bg=#cc575d bold"
set -g window-status-separator '' # Remove space between windows in status bar
# Messaging (i.e. the tmux command line at the bottom of the window)
set -g message-fg "white"
set -g message-bg "red"
set -g message-attr bold

# Force 256 color support.
set -g default-terminal "screen-256color"

# Monitor for a bell in the window.  Windows with a bell are highlighted in the
# status line.
set -g monitor-bell on

# Set action on a bell in a window when monitor-bell is on.  The values are the
# same as those for activity-action.
set -g bell-action other

# Monitor for activity in the window. Windows with activity are highlighted in
# the status line.
set -g monitor-activity off

# on: display a banner bar message at the bottom of the screen (e.g. inside that
# yellow bar) for which the monitor-activity window option is enabled.
#
# both: a bell and a banner bar message are produced.
#
# off: no banner bar message on activity.
set -g visual-activity off

# Set action on window activity when monitor-activity is on.
#
# any: activity in any window linked to a session causes a bell or message
# (depending on visual-activity) in the current window of that session
#
# none: all activity is ignored (equivalent to monitor-activity being off)
#
# current: only activity in windows other than the current window are ignored
# and other means activity in the current window is ignored but not those in
# other windows
set -g activity-action other

# #############################################################################
# Keybindings
# #############################################################################

# Keyboard shortcut to reload our config file.
bind r source-file $HOME/.tmux.conf \; display "Configuration file reloaded"

# Use vim keybindings for navigating the buffer.
set -g mode-keys vi

# Make keybindings for split windows more obvious and memorable. I find tmux's
# naming scheme of a vertical split in a window being called "horizontal"
# confusing.
bind | split-window -h -c '#{pane_current_path}'
# So we can lazily hit the above without pressing shift.
bind \ split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# Open new windows in $HOME.
bind c new-window -c '~'

# Use vim movement keys for window pane switching. The -r makes the
# command repeatable within the repeat-time (which is 500 miliseconds by
# default) without having to re-press the PREFIX key(s).
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# Use (almost) vim movement keys for window pane resizing.
bind -r C-h resize-pane -L 5
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-l resize-pane -R 5

# Move windows right or left with Ctrl-Shift-<arrow>.
# Does not require pressing prefix key first.
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# Use (almost) vim keybindings for copy / paste.
# Use the escape key to enter copymode.
unbind [
bind q copy-mode
# Use v and y for visual selection and pasting (yanking).
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection
# Use C-p to paste, kinda like in vim.
bind C-p paste-buffer

# Custom prefix key (default is Ctrl-b).
unbind C-b
set -g prefix C-f
bind C-f send-prefix

# Convenient last-* switching.
bind-key C-f last-window
bind C-a last-pane

# #############################################################################
# Miscellaneous
# #############################################################################

# Show pane numbers for longer.
# Allows us to select a pane slower, which is nice.
set -g display-panes-time 2000

# More history
set -g history-limit 10000

# Set status line update interval (default is every 15 seconds).
set -g status-interval 5

# tmux waits one second after pressing escape to actually send the esape key
# because it's waiting to see if you hit more keys for an escape mapping. This
# can be somewhat annoying when using things like vim. Let's turn that time out
# to zero.
set -g escape-time 0

# Turn off all mouse interactions with the window. This can be handy but more
# often than not causes undesired behavior e.g. clicking on terminal changes
# window pane.
# setw -g mode-mouse off

# Start window and pane numbering from 1.
set -g base-index 1
setw -g pane-base-index 1

# Re-number windows if one is closed.
set -g renumber-windows on

# Load our work-only config, if it's present.
if-shell "[ -f $HOME/.at_work.tmux.conf ]" "source-file $HOME/.at_work.tmux.conf"
